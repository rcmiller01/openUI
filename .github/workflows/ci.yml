name: ci
on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}

      - name: Build frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build

      - name: Install backend dependencies
        run: |
          pip install -U pip
          pip install -r backend/requirements.txt
      
      - name: Run linting
        run: ruff check .
      
      - name: Check formatting
        run: black --check .
      
      - name: Run type checks
        run: mypy src
      
      - name: Run tests
        run: pytest -q --maxfail=1 --disable-warnings --cov=src --cov=backend --cov-report=xml
      
      - name: Run security checks
        run: |
          bandit -r src/
          safety check
      
  docker-build:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/openui:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/openui:latest